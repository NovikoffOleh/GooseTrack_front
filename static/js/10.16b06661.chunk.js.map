{"version":3,"file":"static/js/10.16b06661.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/AuthField/AuthField.styled.js","components/Auth/AuthField/AuthField.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","pages/RegisterPage.styled.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n// check main font size and line height and delete doubling\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 346px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 424px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n    text-align: start;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;  \n    }\n`;\n\nexport const StyledIcon = styled.div`\n    margin-left: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`;\n\nexport const StyledButton = styled.button`\n    height: 46px;\n    margin-top: 32px;\n    background-color: ${({theme}) => (theme.colors.accent)};\n    color: ${({theme}) => (theme.colors.white)};\n    font-weight: 600;\n    font-family: inherit;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    box-shadow: ${({theme}) => (theme.shadows.authButton)};\n    border-radius: 16px;\n    border-width: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer; \n    \n    :hover {\n        background-color: ${({theme}) => (theme.colors.hovered)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 56px;\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    position: absolute;\n    bottom: -32px;\n    right: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({theme}) => (theme.colors.accent)};\n    text-align: center;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;","import styled from \"@emotion/styled\";\n\n// check main font size and line height and delete doubling\n\nexport const Wrapper = styled.div`\n    position: relative;\n`;\n\nexport const InputContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n    margin-top: 24px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.borderInputActive\n        }           \n    }};\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 15px;\n    text-align: start;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-top: 18px;\n        font-size: 14px;\n        line-height: 17px; \n    }\n`;\n\nexport const StyledInput = styled.input`\n    box-sizing: border-box;\n    height: 46px;\n    padding: 14px;\n    margin-top: 8px;\n    background-color: ${({theme}) => (theme.colors.white)};\n    color: ${({theme}) => (theme.colors.borderInputActive)};\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 18px;\n    border: 1px solid;\n    border-color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return theme.colors.borderInput;\n        }           \n    }};\n    border-radius: 8px;\n\n    ::placeholder {\n        color: ${({theme}) => (theme.colors.placegolderAuth)}    \n    }\n    :focus {\n        border: 1px solid ${({theme}) => (theme.colors.borderInputActive)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 54px;\n        padding: 18px;\n        font-size: 16px;\n        line-height: 18px;\n    }\n`;\n\nexport const StyledIcon = styled.div`\n    width: 20px;\n    height: 20px;\n    margin-right: 12px;\n    position: absolute;\n    bottom: 13px;\n    right: 0;\n\n`;\n\nexport const StyledInputNotification = styled.p`\n    margin: 0;\n    padding: 0 18px;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({valid, theme}) => {\n        switch (valid) {\n            case true:\n                return theme.colors.saccess;\n            case false:\n                return theme.colors.failed;\n            default:\n                return 'transparant';\n        }           \n    }};\n`;","import { Wrapper, StyledInput, StyledLabel, StyledIcon, InputContainer, StyledInputNotification } from './AuthField.styled';\nimport { BiErrorCircle, BiCheckCircle } from \"react-icons/bi\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@emotion/react';\n\nexport const AuthField = ({valid, onChange, value, name, type, placeholder, errorMessage}) => {\n    const themeColors = useTheme().colors;\n    \n    return (\n        <Wrapper>\n            <InputContainer>\n                <StyledLabel htmlFor={name.toLowerCase()} valid={valid}>{name}</StyledLabel>\n                <StyledInput\n                    id={name.toLowerCase()}\n                    name={name.toLowerCase()}\n                    type={type}\n                    onChange={onChange}\n                    value={value}\n                    placeholder={placeholder}\n                    valid={valid}\n                />\n                {valid === false && <StyledIcon><BiErrorCircle color={themeColors.failed} size={20}/></StyledIcon>}\n                {valid && <StyledIcon><BiCheckCircle color={themeColors.saccess} size={20}/></StyledIcon>}\n            </InputContainer>\n                {valid === false && <StyledInputNotification valid={valid}>{errorMessage}</StyledInputNotification>}\n        </Wrapper>\n    )\n};\n\nAuthField.propTypes = {\n    valid: PropTypes.oneOf([true, false, null]),\n    onChange: PropTypes.func.isRequired, \n    value: PropTypes.string.isRequired, \n    name: PropTypes.string.isRequired, \n    type: PropTypes.oneOf(['text', 'email']).isRequired, \n    placeholder: PropTypes.string.isRequired,\n    errorMessage: PropTypes.string\n};\n","import { useFormik } from 'formik';\nimport {\n  StyledButton,\n  StyledForm,\n  StyledHeading,\n  StyledIcon,\n} from './LoginForm.styled';\nimport { useState } from 'react';\nimport { AuthField } from '../AuthField/AuthField';\nimport { validateLoginForm } from 'helpers';\nimport { FiLogIn } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [emailValid, setEmailValid] = useState();\n  const [passwordValid, setPasswordValid] = useState();\n\n  const onSubmitForm = async values => {\n    // validation of inputs\n    const validationResponse = await validateLoginForm(values);\n    setEmailValid(validationResponse.email);\n    setPasswordValid(validationResponse.password);\n    await dispatch(logIn(values));\n\n    // set loader true\n\n    // API registration\n\n    // set loader false\n\n    // notificate API response\n\n    // redirect /calendar/month\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      email: '',\n    },\n    onSubmit: values => {\n      onSubmitForm(values);\n    },\n  });\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <StyledHeading>Log in</StyledHeading>\n\n      <AuthField\n        name={'Email'}\n        value={formik.values.email}\n        type={'email'}\n        onChange={formik.handleChange}\n        valid={emailValid?.valid}\n        placeholder=\"Enter email\"\n        errorMessage={emailValid?.error}\n      />\n\n      <AuthField\n        name={'Password'}\n        value={formik.values.password}\n        type={'text'}\n        onChange={formik.handleChange}\n        valid={passwordValid?.valid}\n        placeholder=\"Enter password\"\n        errorMessage={passwordValid?.error}\n      />\n\n      <StyledButton type=\"submit\">\n        Log in\n        <StyledIcon>\n          <FiLogIn size={17} color=\"#FFFFFF\" />\n        </StyledIcon>\n      </StyledButton>\n    </StyledForm>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\n// check main font size and line height and delete doubling\n// check using font family\n\nexport const StyledForm = styled.form`\n    position: relative;\n    box-sizing: border-box;\n    width: 100%;\n    min-height: 469px;\n    margin: auto 20px;\n    padding: 40px 20px;\n    display: flex;\n    flex-direction: column;\n    background-color: ${({theme}) => (theme.colors.white)};\n    border-radius: 8px;\n    font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.s)}){\n        width: 335px;\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}){\n        width: 480px;\n        min-height: 521px;\n        padding: 40px;\n    }\n`;\n\nexport const StyledHeading = styled.h2`\n    margin-bottom: 8px;\n    color: ${({theme}) => (theme.colors.accent)};\n    font-size: 18px;\n    line-height: 24px;\n    font-weight: 600;\n    text-shadow: ${({theme}) => (theme.shadows.authHeading)};\n    text-align: start;\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        margin-bottom: 22px;\n        font-size: 24px;\n    }\n`;\n\nexport const StyledIcon = styled.div`\n    margin-left: 14px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`;\n\nexport const StyledButton = styled.button`\n    height: 46px;\n    margin-top: 32px;\n    background-color: ${({theme}) => (theme.colors.accent)};\n    color: ${({theme}) => (theme.colors.white)};\n    font-weight: 600;\n    font-size: 14px;\n    font-family: inherit;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    box-shadow: ${({theme}) => (theme.shadows.authButton)};\n    border-radius: 16px;\n    border-width: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    :hover {\n        background-color: ${({theme}) => (theme.colors.hovered)};\n    }\n\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        height: 56px;\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    position: absolute;\n    bottom: -32px;\n    right: 0;\n    width: 100%;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 14px;\n    color: ${({theme}) => (theme.colors.accent)};\n    text-align: center;\n    @media screen and (min-width: ${({theme}) => (theme.breakpoints.m)}) {\n        font-size: 18px;\n        line-height: 24px;\n    }\n`;\n","import { useFormik } from 'formik';\nimport { StyledButton, StyledForm, StyledHeading, StyledIcon } from './RegisterForm.styled';\nimport { useState } from 'react';\nimport { AuthField } from '../AuthField/AuthField';\nimport { validateRegisterForm } from 'helpers/authFieldValidation';\nimport { FiLogIn } from 'react-icons/fi';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../../redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [emailValid, setEmailValid] = useState(null);\n  const [passwordValid, setPasswordValid] = useState(null);\n  const [usernameValid, setUsernameValid] = useState(null);\n\n  const onSubmitForm = async (values) => {\n    try {\n      // validation of inputs\n      const validationResponse = await validateRegisterForm(values);\n      setEmailValid(validationResponse.email.valid);\n      setPasswordValid(validationResponse.password.valid);\n      setUsernameValid(validationResponse.username.valid);\n\n  await dispatch(register(values));\n\n      // set loader true\n\n      // API registration\n\n      // set loader false\n\n      // notificate API response\n\n      // redirect /calendar/month\n      formik.resetForm();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      email: '',\n    },\n    onSubmit: values => {\n      onSubmitForm(values);\n    },\n  });\n\n  return (\n    <StyledForm onSubmit={formik.handleSubmit}>\n      <StyledHeading>Sign up</StyledHeading>\n\n\n      <AuthField\n        name={'Username'}\n        value={formik.values.username}\n        type={'text'}\n        onChange={formik.handleChange}\n        valid={usernameValid}\n        placeholder='Enter your name'\n      />\n\n      <AuthField\n        name={'Email'}\n        value={formik.values.email}\n        type={'email'}\n        onChange={formik.handleChange}\n        valid={emailValid}\n        placeholder='Enter email'\n      />\n\n      <AuthField\n        name={'Password'}\n        value={formik.values.password}\n        type={'text'}\n        onChange={formik.handleChange}\n        valid={passwordValid}\n        placeholder='Enter password'\n      />\n\n      <StyledButton type='submit'>\n        Sign up\n        <StyledIcon><FiLogIn size={17} color='#FFFFFF' /></StyledIcon>\n      </StyledButton>\n\n    </StyledForm>\n  );\n};\n","import { RegisterForm } from 'components/Auth';\nimport { Img, RegisterPageContainer, RegisterPageWrap, StyledNavLink } from './RegisterPage.styled';\nimport normalImage from 'images/others/desktop/goose-quote1x.png';\nimport retinaImage from 'images/others/desktop/goose-quote2x.png';\nimport superRetinaImage from 'images/others/desktop/goose-quote3x.png';\n\nconst RegisterPage = () => {\n  return (\n    <RegisterPageContainer>\n      <Img\n        src={normalImage}\n        srcSet={`${normalImage} 1x, ${retinaImage} 2x, ${superRetinaImage} 3x`}\n        alt='Goose wiht tablet'\n      />\n      <RegisterPageWrap>\n        <RegisterForm />\n        <StyledNavLink to={'/login'}>Log In</StyledNavLink>\n      </RegisterPageWrap>\n    </RegisterPageContainer>\n  );\n};\n\nexport default RegisterPage;\n","import styled from \"@emotion/styled\";\nimport { Link } from 'react-router-dom';\nimport { themes } from 'styles/themes';\nexport const RegisterPageContainer = styled.div`\n  background-color: ${themes.colors.backgroundAuth};\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const RegisterPageWrap = styled.div`\ntext-align: center;\n\n`;\nexport const StyledNavLink = styled(Link)`\n  display: block;\n  margin-top: ${themes.fontSizes.l};\n  color:${themes.colors.accent};\n  font-weight: ${themes.fontWeight.sb};\n  font-size: ${themes.fontSizes.xs};\n  line-height: 1.17;\n  text-decoration-line: underline;\n  cursor: pointer;\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07), 0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    margin-top: ${themes.fontSizes.xxl};\n  }\n\n  :hover {\n    color: #2c66bc;\n  }\n`;\n\nexport const Img = styled.img`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    display: block;\n    width: 400px;\n    height: 416px;\n    position: absolute;\n    left: 49px;\n    bottom: 0;\n  }\n`;\n\n\n"],"names":["StyledForm","styled","theme","colors","white","breakpoints","s","m","StyledHeading","accent","shadows","authHeading","StyledIcon","StyledButton","authButton","hovered","Link","Wrapper","InputContainer","StyledLabel","valid","saccess","failed","borderInputActive","StyledInput","borderInput","placegolderAuth","StyledInputNotification","AuthField","onChange","value","name","type","placeholder","errorMessage","themeColors","useTheme","htmlFor","toLowerCase","id","color","size","LoginForm","dispatch","useDispatch","useState","emailValid","setEmailValid","passwordValid","setPasswordValid","onSubmitForm","values","validateLoginForm","validationResponse","email","password","logIn","formik","resetForm","useFormik","initialValues","onSubmit","handleSubmit","handleChange","error","RegisterForm","usernameValid","setUsernameValid","validateRegisterForm","username","register","console","log","src","normalImage","srcSet","retinaImage","superRetinaImage","alt","to","RegisterPageContainer","themes","RegisterPageWrap","StyledNavLink","Img"],"sourceRoot":""}